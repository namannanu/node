{
  "info": {
    "name": "S3 Image Service Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "1. Admin Login",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const jsonData = pm.response.json();",
              "if (jsonData.token) {",
              "    pm.environment.set('authToken', jsonData.token);",
              "    console.log('✅ Auth token saved');",
              "}"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"{{adminEmail}}\",\n    \"password\": \"{{adminPassword}}\"\n}"
        },
        "url": "{{baseUrl}}/api/auth/login"
      }
    },
    {
      "name": "2. Upload Image",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const jsonData = pm.response.json();",
              "",
              "pm.test('Upload successful', () => {",
              "    pm.expect(jsonData.success).to.be.true;",
              "    pm.expect(jsonData.key).to.be.a('string');",
              "    if (jsonData.key) {",
              "        pm.environment.set('imageKey', jsonData.key);",
              "        console.log('✅ Image key saved:', jsonData.key);",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "image",
              "type": "file",
              "src": "./test-image.jpg"
            },
            {
              "key": "userId",
              "value": "{{userId}}",
              "type": "text"
            }
          ]
        },
        "url": "{{baseUrl}}/api/users/{{userId}}/image"
      }
    },
    {
      "name": "3. Get Signed URL",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const jsonData = pm.response.json();",
              "",
              "pm.test('Signed URL generated', () => {",
              "    pm.expect(jsonData.success).to.be.true;",
              "    pm.expect(jsonData.url).to.be.a('string');",
              "    pm.expect(jsonData.url).to.include('nfacialimagescollections');",
              "    if (jsonData.url) {",
              "        pm.environment.set('signedUrl', jsonData.url);",
              "        console.log('✅ Signed URL saved');",
              "    }",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": "{{baseUrl}}/api/users/{{userId}}/image"
      }
    },
    {
      "name": "4. Verify Image Accessibility",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Image is accessible', () => {",
              "    pm.expect(pm.response.code).to.equal(200);",
              "    pm.expect(pm.response.headers.get('Content-Type')).to.include('image');",
              "    console.log('✅ Image is accessible');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "url": "{{signedUrl}}"
      }
    },
    {
      "name": "5. Get Multiple URLs",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const jsonData = pm.response.json();",
              "",
              "pm.test('Multiple URLs generated', () => {",
              "    pm.expect(jsonData.success).to.be.true;",
              "    pm.expect(jsonData.urls).to.be.an('object');",
              "    pm.expect(jsonData.urls.short).to.have.property('url');",
              "    pm.expect(jsonData.urls.medium).to.have.property('url');",
              "    pm.expect(jsonData.urls.long).to.have.property('url');",
              "    console.log('✅ Multiple URLs generated');",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{authToken}}"
          }
        ],
        "url": "{{baseUrl}}/api/users/{{userId}}/image/urls"
      }
    }
  ]
}
